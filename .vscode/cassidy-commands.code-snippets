{
  "Command Template": {
    "prefix": "define-command",
    "body": [
      "// @ts-check",
      "/**",
      " * @type {CassidySpectra.CommandMeta}",
      " */",
      "export const meta = {",
      "  name: \"${1:commandName}\",",
      "  description: \"${2:Command description}\",",
      "  author: \"${3:Author Name}\",",
      "  version: \"${4:1.0.0}\",",
      "  usage: \"${5:commandName}\",",
      "  category: \"${6:Category}\",",
      "  permissions: [${7:0}],",
      "  noPrefix: \"${8:both}\",",
      "  otherNames: [${9:\"alias1\", \"alias2\"}],",
      "  botAdmin: ${10:false},",
      "  waitingTime: ${11:1},",
      "  requirement: \"${12:3.0.0}\",",
      "  icon: \"${13:ðŸ”§}\"",
      "};",
      "",
      "/**",
      " * @param {CassidySpectra.CommandContext} ctx",
      " */",
      "export async function entry({ input, output, args, money, threadsDB }) {",
      "  // Your command logic here",
      "  ${15:// Example: output.reply(\"Hello, World!\");}",
      "}"
    ],
    "description": "Creates a Cassidy Command Template with meta and entry."
  },
  "Command Template With Spectral Home": {
    "prefix": "define-command-spectra",
    "body": [
      "// @ts-check",
      "import { SpectralCMDHome } from \"@cassidy/spectral-home\";",
      "import { defineEntry } from \"@cass/define\";",
      "",
      "/**",
      " * @type {CassidySpectra.CommandMeta}",
      " */",
      "export const meta = {",
      "  name: \"${1:commandname}\",",
      "  description: \"${2:Command description}\",",
      "  author: \"${3:Author Name}\",",
      "  version: \"${4:1.0.0}\",",
      "  usage: \"${5:commandname}\",",
      "  category: \"${6:Category}\",",
      "  permissions: [${7:0}],",
      "  noPrefix: \"${8:both}\",",
      "  otherNames: [${9:\"alias1\", \"alias2\"}],",
      "  botAdmin: ${10:false},",
      "  waitingTime: ${11:1},",
      "  requirement: \"${12:3.0.0}\",",
      "  icon: \"${13:ðŸ”§}\"",
      "};",
      "",
      "/**",
      " * @type {import(\"@cassidy/spectral-home\").Config[]}",
      " */",
      "const configs = [",
      "  {",
      "    key: \"${14:name1}\",",
      "    description: \"${15:description1}\",",
      "    args: [\"[uid]\"],",
      "    aliases: [\"${16:alias1}\", \"${17:alias2}\"],",
      "    icon: \"${18:icon1}\",",
      "    validator: new CassCheckly([{ index: 0, type: \"string\", required: false, name: \"${19:userID}\" }]),",
      "    async handler({ money, input, output, prefix, Collectibles, commandName }, { itemList, spectralArgs, cooldown }) {",
      "      // Add your command logic here",
      "      output.reply(\"${20:command logic for name1}\");",
      "    }",
      "  },",
      "  {",
      "    key: \"${14:name1}\",",
      "    description: \"${15:description1}\",",
      "    args: [\"[uid]\"],",
      "    aliases: [\"${16:alias1}\", \"${17:alias2}\"],",
      "    icon: \"${18:icon1}\",",
      "    validator: new CassCheckly([{ index: 0, type: \"string\", required: false, name: \"${19:userID}\" }]),",
      "    async handler({ money, input, output, prefix, Collectibles, commandName }, { itemList, spectralArgs, cooldown }) {",
      "      // Add your command logic here",
      "      output.reply(\"${20:command logic for name1}\");",
      "    }",
      "  },",
      "  {",
      "    key: \"${14:name1}\",",
      "    description: \"${15:description1}\",",
      "    args: [\"[uid]\"],",
      "    aliases: [\"${16:alias1}\", \"${17:alias2}\"],",
      "    icon: \"${18:icon1}\",",
      "    validator: new CassCheckly([{ index: 0, type: \"string\", required: false, name: \"${19:userID}\" }]),",
      "    async handler({ money, input, output, prefix, Collectibles, commandName }, { itemList, spectralArgs, cooldown }) {",
      "      // Add your command logic here",
      "      output.reply(\"${20:command logic for name1}\");",
      "    }",
      "  },",
      "]",
      "",
      "const home = new SpectralCMDHome(",
      "  {",
      "    argIndex: 0,",
      "    isHypen: ${14:true},",
      "    globalCooldown: ${15:5},",
      "    defaultKey: \"${16:help}\",",
      "    errorHandler: (error, ctx) => {",
      "      ${17:ctx.output.error(error);}",
      "    },",
      "    defaultCategory: \"${18:Misc}\",",
      "  },",
      "  configs",
      ");",
      "",
      "export const entry = defineEntry((ctx) => home.runInContext(ctx));"
    ],
    "description": "Creates a Cassidy Command Template with meta and entry."
  }
}
